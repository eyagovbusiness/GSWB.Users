// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/eyagovbusiness/GSWB.Users/src/application/UseCases/user"
	"github.com/eyagovbusiness/GSWB.Users/src/infrastructure/persistence/repositories"
	"github.com/eyagovbusiness/GSWB.Users/src/presentation/http"
	"github.com/eyagovbusiness/GSWB.Users/src/presentation/http/handler"
	"gorm.io/driver/postgres"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitializeServer() (*http.Server, error) {
	db, err := ProvideDatabase()
	if err != nil {
		return nil, err
	}
	iUserRepository := repositories.NewGormUserRepository(db)
	createUserUseCase := user.NewCreateUserUseCase(iUserRepository)
	listUsersUseCase := user.NewListUsersUseCase(iUserRepository)
	userHandler := handler.NewUserHandler(createUserUseCase, listUsersUseCase)
	server := http.NewServer(userHandler)
	return server, nil
}

// wire.go:

func ProvideDatabase() (*gorm.DB, error) {
	dsn := "host=localhost port=5432 user=postgres dbname=users password=secret sslmode=disable"

	db, err := gorm.Open(postgres.Open(dsn), &gorm.Config{})
	if err != nil {
		return nil, err
	}

	return db, nil
}
